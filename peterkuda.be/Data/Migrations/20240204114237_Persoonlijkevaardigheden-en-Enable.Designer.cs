// <auto-generated />
using System;
using CurriculumVitae.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CurriculumVitae.Data.Migrations
{
    [DbContext(typeof(CurriculumVitaeDbContext))]
    [Migration("20240204114237_Persoonlijkevaardigheden-en-Enable")]
    partial class PersoonlijkevaardighedenenEnable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("CurriculumVitae.Data.Entities.ComputerVaardigheid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Niveau")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("computerVaardigheiden");
                });

            modelBuilder.Entity("CurriculumVitae.Data.Entities.PersoonlijkeVaardigheid", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PersoonlijkeVaardigheiden");
                });

            modelBuilder.Entity("CurriculumVitae.Data.Entities.Profiel", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Profielen");
                });

            modelBuilder.Entity("CurriculumVitae.Data.Entities.Taak", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bechrijving")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WerkErvaringId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WerkErvaringId");

                    b.ToTable("Taak");
                });

            modelBuilder.Entity("CurriculumVitae.Data.Entities.TaalModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Niveau")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Taal")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Talen");
                });

            modelBuilder.Entity("CurriculumVitae.Data.Entities.WerkErvaring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bedrijf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatumTot")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatumVan")
                        .HasColumnType("TEXT");

                    b.Property<string>("Functie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WerkErvaringen");
                });

            modelBuilder.Entity("CurriculumVitae.Data.Entities.Taak", b =>
                {
                    b.HasOne("CurriculumVitae.Data.Entities.WerkErvaring", null)
                        .WithMany("Taken")
                        .HasForeignKey("WerkErvaringId");
                });

            modelBuilder.Entity("CurriculumVitae.Data.Entities.WerkErvaring", b =>
                {
                    b.Navigation("Taken");
                });
#pragma warning restore 612, 618
        }
    }
}
