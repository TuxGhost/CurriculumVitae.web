// <auto-generated />
using System;
using CurriculumVitae.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CurriculumVitaeRepository.Migrations
{
    [DbContext(typeof(CVDbContext))]
    [Migration("20240319094156_Initial CVDbContext")]
    partial class InitialCVDbContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("CurriculumVitaeRepository.Entities.Computervaardigheid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Niveau")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("profielId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("profielId");

                    b.ToTable("ComputerSkills", (string)null);
                });

            modelBuilder.Entity("CurriculumVitaeRepository.Entities.Persoonlijkevaardigheid", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("profielId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("profielId");

                    b.ToTable("PersonnalSkills", (string)null);
                });

            modelBuilder.Entity("CurriculumVitaeRepository.Entities.Profiel", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Profiles", (string)null);
                });

            modelBuilder.Entity("CurriculumVitaeRepository.Entities.Taak", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bechrijving")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WerkErvaringId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WerkErvaringId");

                    b.ToTable("Tasks", (string)null);
                });

            modelBuilder.Entity("CurriculumVitaeRepository.Entities.Taal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Niveau")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TaalOmschrijving")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("profielId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("profielId");

                    b.ToTable("Languages", (string)null);
                });

            modelBuilder.Entity("CurriculumVitaeRepository.Entities.WerkErvaring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bedrijf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatumTot")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatumVan")
                        .HasColumnType("TEXT");

                    b.Property<string>("Functie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("profielId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("profielId");

                    b.ToTable("Workexperiences", (string)null);
                });

            modelBuilder.Entity("CurriculumVitaeRepository.Entities.Computervaardigheid", b =>
                {
                    b.HasOne("CurriculumVitaeRepository.Entities.Profiel", "profiel")
                        .WithMany()
                        .HasForeignKey("profielId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("profiel");
                });

            modelBuilder.Entity("CurriculumVitaeRepository.Entities.Persoonlijkevaardigheid", b =>
                {
                    b.HasOne("CurriculumVitaeRepository.Entities.Profiel", "profiel")
                        .WithMany()
                        .HasForeignKey("profielId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("profiel");
                });

            modelBuilder.Entity("CurriculumVitaeRepository.Entities.Taak", b =>
                {
                    b.HasOne("CurriculumVitaeRepository.Entities.WerkErvaring", "WerkErvaring")
                        .WithMany("Taken")
                        .HasForeignKey("WerkErvaringId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WerkErvaring");
                });

            modelBuilder.Entity("CurriculumVitaeRepository.Entities.Taal", b =>
                {
                    b.HasOne("CurriculumVitaeRepository.Entities.Profiel", "profiel")
                        .WithMany()
                        .HasForeignKey("profielId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("profiel");
                });

            modelBuilder.Entity("CurriculumVitaeRepository.Entities.WerkErvaring", b =>
                {
                    b.HasOne("CurriculumVitaeRepository.Entities.Profiel", "profiel")
                        .WithMany()
                        .HasForeignKey("profielId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("profiel");
                });

            modelBuilder.Entity("CurriculumVitaeRepository.Entities.WerkErvaring", b =>
                {
                    b.Navigation("Taken");
                });
#pragma warning restore 612, 618
        }
    }
}
